

def generate_diamond(size):
    result = ""

    for line in range(size):
        width = 2*line -1
        initial_blanks = int(((2*size-1) - (width))/2)
        result +=  " " * initial_blanks + "#" * (width) +  "\n"

    for line in range( size):
        width = 2 * (size - line) - 1
        initial_blanks = int(((2 * size - 1) - (width)) / 2)
        result += " " * initial_blanks + "#" * (width) + "\n"

    return result

answer_file_name = ""

# Receive two file paths from the user, where the former is for reading data and the latter is for writing.
# The output file name must be assigned to answer_file_name variable as it is used for output checking.

# The input file contains an integer number
# The output file must contain the shape generated by the given generate_diamond method.

# DO NOT write any prompt messages inside the input functions.
# Do not write any  prints
# Do not forget to close your file handles.
#----------------------------------------------------------------
# DO_NOT_EDIT_ANYTHING_ABOVE_THIS_LINE



# DO_NOT_EDIT_ANYTHING_BELOW_THIS_LINE
#----------------------------------------------------------------
answer = open(answer_file_name)
print(answer.read())
answer.close()




